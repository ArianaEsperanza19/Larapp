services:
    # Servicio de la aplicación Laravel (PHP-FPM)
    app:
        build:
            context: . # Busca el Dockerfile en el directorio actual
            dockerfile: Dockerfile
        container_name: Larapp
        restart: unless-stopped
        volumes:
            # - .:/var/www # Monta tu código Laravel en el contenedor
            - .:/var/www:delegated,uid=33,gid=33
            - ./docker/app/entrypoint.sh:/usr/local/bin/entrypoint.sh:ro # Monta el script en el contenedor (solo lectura)
            - app_storage:/var/www/storage # <-- This volume
            - app_cache:/var/www/bootstrap/cache # <-- And this volume
        ports:
            - "9000:9000" # Exponer el puerto FPM si es necesario para depuración o acceso directo
        depends_on:
            - db # La aplicación depende de la base de datos
        environment:
            # Pasa las variables de entorno de tu archivo .env local a los contenedores
            - DB_CONNECTION=${DB_CONNECTION:-mysql}
            - DB_HOST=${DB_HOST:-db} # Asegúrate de que este nombre coincida con el servicio 'db'
            - DB_PORT=${DB_PORT:-3306}
            - DB_DATABASE=${DB_DATABASE:-laravel}
            - DB_USERNAME=${DB_USERNAME:-laravel_user}
            - DB_PASSWORD=${DB_PASSWORD:-laravel_password} # contraseña de MariaDB
        networks:
            - app-network

    # Servicio de Nginx (servidor web)
    nginx:
        image: nginx:stable-alpine # Usa una imagen ligera de Nginx
        container_name: nginx_server
        restart: unless-stopped
        ports:
            - "80:80" # Mapea el puerto 80 del host al puerto 80 del contenedor
        volumes:
            - .:/var/www # Monta el código Laravel para que Nginx lo sirva
            # =======================================================================================
            # ✨ MODIFICACIÓN Y ESPECIFICACIÓN CLAVE ✨
            # Asegúrate de que el archivo 'nginx.conf' exista en la ruta './docker/nginx/nginx.conf'
            # en tu host. Si no existe o es un directorio, causará el error "not a directory".
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro # Configuración de Nginx (solo lectura)
            # =======================================================================================
        depends_on:
            - app # Nginx depende de la aplicación PHP-FPM
        networks:
            - app-network

    # Servicio de la base de datos (MariaDB)
    db:
        image: mariadb:10.6 # Usa la versión de MariaDB que prefieras
        container_name: mariadb_db
        restart: unless-stopped
        environment:
            # Variables de entorno para configurar MariaDB
            MARIADB_ROOT_PASSWORD: ${DB_PASSWORD:-laravel_password} # Contraseña root de MariaDB
            MARIADB_DATABASE: ${DB_DATABASE:-laravel} # Nombre de la base de datos
            MARIADB_USER: ${DB_USERNAME:-laravel_user} # Usuario de la base de datos
            MARIADB_PASSWORD: ${DB_PASSWORD:-laravel_password} # Contraseña del usuario
        volumes:
            - dbdata:/var/lib/mysql # **Volumen persistente para los datos de la DB**
        ports:
            - "3306:3306" # Mapea el puerto 3306 del host al 3306 del contenedor (opcional, pero útil para clientes externos)
        networks:
            - app-network

# Definición de volúmenes para la persistencia de datos
volumes:
    dbdata: # Aquí se guardarán los datos de MariaDB

# Definición de redes para que los servicios puedan comunicarse
networks:
    app-network:
        driver: bridge
